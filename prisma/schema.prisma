// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Agency {
  id                    String       @id @default(cuid())
  name                  String
  subdomain             String       @unique
  logo                  String?
  primaryColor          String?
  secondaryColor        String?
  aboutUs               String?
  contactInfo           String?
  subscriptionPlan      String?
  subscriptionStatus    String?
  subscriptionExpiresAt DateTime?
  createdAt             DateTime     @default(now())
  updatedAt             DateTime     @updatedAt
  users                 User[]
  leads                 Lead[]
  agents                Agent[]
  invitations           Invitation[]
}

model User {
  id            String       @id @default(cuid())
  name          String?
  email         String       @unique
  emailVerified DateTime?
  image         String?
  password      String
  role          UserRole     @default(USER)
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt
  agency        Agency       @relation(fields: [agencyId], references: [id])
  agencyId      String
  leads         Lead[]
  invitedUsers  User[]       @relation("Affiliates")
  invitedBy     User?        @relation("Affiliates", fields: [invitedById], references: [id])
  invitedById   String?
  commissions   Commission[]
  sentInvitations Invitation[] @relation("SentInvitations")
}

model Lead {
  id          String   @id @default(cuid())
  title       String
  description String
  status      String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  user        User     @relation(fields: [userId], references: [id])
  userId      String
  agency      Agency   @relation(fields: [agencyId], references: [id])
  agencyId    String
  agent       Agent?   @relation(fields: [agentId], references: [id])
  agentId     String?
}

model Agent {
  id       String @id @default(cuid())
  name     String
  email    String @unique
  agency   Agency @relation(fields: [agencyId], references: [id])
  agencyId String
  leads    Lead[]
}

model Commission {
  id        String   @id @default(cuid())
  amount    Float
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  lead      Lead     @relation(fields: [leadId], references: [id])
  leadId    String
}

model Invitation {
  id        String   @id @default(cuid())
  email     String
  createdAt DateTime @default(now())
  expiresAt DateTime
  invitedBy User     @relation("SentInvitations", fields: [invitedById], references: [id])
  invitedById String
  agency    Agency   @relation(fields: [agencyId], references: [id])
  agencyId  String
}

enum UserRole {
  ADMIN
  AGENCY_ADMIN
  USER
}